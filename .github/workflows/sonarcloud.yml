name: SonarCloud C Coverage

on:
  push:
    branches: [ main ] # run only on main
    # branches: ['**'] # run on all branches
  pull_request:

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # Install dependencies
      - name: Install build & coverage tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc lcov

      # Build all exercises with coverage
      - name: Build with coverage
        run: |
          find . -type f \( -name '*.o' -o -name '*.gcda' -o -name '*.gcno' \) -delete

          for exdir in $(find . -type d -path "./sd*/ex*"); do

            find "$exdir" -type f -name '*.c' | while read src; do
              gcc -fprofile-arcs -ftest-coverage -O0 -g -c "$src" \
                  -o "${src%.c}.o"
            done

            OBJ_FILES=$(find "$exdir" -type f -name '*.o' | tr '\n' ' ')
            gcc -fprofile-arcs -ftest-coverage -O0 -g $OBJ_FILES \
                -o "$exdir/exercise"

            (cd "$exdir" && ./exercise)
          done

      # Capture lcov coverage
      - name: Capture LCOV
        run: |
          lcov --directory . --capture --output-file coverage.info
      
      # Generate .gcov files for SonarCloud
      - name: Generate GCOV files
        run: |
          find . -type f -name '*.c' | while read src; do
            dir=$(dirname "$src")
            gcov -pb -o "$dir" "$src"
          done || true

      # Run SonarScanner as GitHub Action
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-c-cpp@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      # Upload .lcov report as GitHub Action artifact
      - name: Upload LCOV report
        uses: actions/upload-artifact@v4
        with:
          name: lcov-report
          path: coverage.info