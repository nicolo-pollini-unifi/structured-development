name: SonarCloud C Coverage

on:
  push:
    branches: ['**'] # run on _all_ branches
  pull_request:

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Install dependencies
      - name: Install build & coverage tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc lcov

      # Build all exercises with coverage
      - name: Build with coverage
        run: |
          SRC_FILES=$(find . -type f -path "./sd*/ex*/*.c" | tr '\n' ' ')
          gcc -fprofile-arcs -ftest-coverage -O0 -g $SRC_FILES -o all_exercises
          ./all_exercises || true

      # Capture & sanitize coverage flags
      - name: Capture LCOV
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --ignore-errors unused --output-file coverage.info

      # Run SonarScanner as GitHub Action
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          organization: nicolo-pollini-unifi
          projectKey: nicolo-pollini-unifi_structured-development
          args: >
            -Dsonar.sources=.
            -Dsonar.inclusions=sd*/ex*/**/*.c,sd*/ex*/**/*.h
            -Dsonar.c.coverage.reportPaths=coverage.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
